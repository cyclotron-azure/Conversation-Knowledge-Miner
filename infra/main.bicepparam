using './main.bicep'

param AZURE_LOCATION = readEnvironmentVariable('AZURE_LOCATION', '')
param environmentName = readEnvironmentVariable('AZURE_ENV_NAME', 'env_name')
param contentUnderstandingLocation = readEnvironmentVariable('AZURE_CONTENT_UNDERSTANDING_LOCATION', 'swedencentral')
param secondaryLocation = readEnvironmentVariable('AZURE_SECONDARY_LOCATION', 'eastus2')
param deploymentType = readEnvironmentVariable('AZURE_OPENAI_MODEL_DEPLOYMENT_TYPE', 'GlobalStandard')
param gptModelName = readEnvironmentVariable('AZURE_OPENAI_DEPLOYMENT_MODEL', 'gpt-4o-mini')
param gptModelVersion = readEnvironmentVariable('AZURE_ENV_MODEL_VERSION', '2024-07-18')
param azureOpenAIApiVersion = readEnvironmentVariable('AZURE_OPENAI_API_VERSION', '2025-01-01-preview')
param gptDeploymentCapacity = int(readEnvironmentVariable('AZURE_OPENAI_DEPLOYMENT_MODEL_CAPACITY', '30'))
param embeddingModel = readEnvironmentVariable('AZURE_OPENAI_EMBEDDING_MODEL', 'text-embedding-ada-002')
param imageTag = readEnvironmentVariable('AZURE_ENV_IMAGETAG', 'latest')
param embeddingDeploymentCapacity = int(readEnvironmentVariable('AZURE_OPENAI_EMBEDDING_MODEL_CAPACITY', '80'))
param existingLogAnalyticsWorkspaceId = readEnvironmentVariable('AZURE_ENV_LOG_ANALYTICS_WORKSPACE_ID', '')
param useLocalBuild = readEnvironmentVariable('USE_LOCAL_BUILD', 'false')
